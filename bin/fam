#!/usr/bin/env ruby

require 'fam'

$VERBOSE = true
$CLOCK = $VERBOSE ? 20 : Float::INFINITY

file_names = ARGV.select { |file| file.include? '.fam'}
lexed = FAM::Syntax::Lexer.lex File.read file_names[-1]
puts lexed if $VERBOSE
puts if $VERBOSE

parsed = FAM::Syntax::Parser.parse lexed.tokens
AST = parsed.ast
pp AST if $VERBOSE

MEM = FAM::Machine::RAM.new '100B'
CPU = FAM::Machine::CPU.new MEM
puts if $VERBOSE

CPU.run AST do |pc|
  puts "Program counter: #{pc}" if $VERBOSE
end


#==== Shortened built in method: ====#

#file_names = ARGV.select { |file| file.include? '.fam'}
#FAM.run File.read(file_names[-1]), :allocate => '100B' do |ram, pc, registers|
#  puts "RAM:\n#{ram}"
#  puts "PC:  #{pc}"
#  puts "REG: #{registers}"
#end
